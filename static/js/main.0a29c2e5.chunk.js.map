{"version":3,"sources":["components/Header.jsx","components/Year.jsx","components/GoalsTitles.jsx","components/AddGoalBox.jsx","components/GoalsList.jsx","components/CompletedTaskBox.jsx","components/Goals.jsx","components/CompletedGoals.jsx","components/HeaderComplete.jsx","App.js","index.js"],"names":["Header","props","className","Year","year","GoalsTitles","key","onClick","toggleNewGoal","AddGoalBox","addGoal","onSubmit","handleNewGoalSubmit","type","value","newGoalValue","onChange","handleGoalValueChange","placeholder","newGoalReasonValue","handleGoalReasonsValueChange","GoalsList","goals","map","entry","i","goal","reason","removeItem","toggle","CompletedTaskBox","on","handleSubmitUpdateGoals","handleChange","Goals","state","index","event","preventDefault","setState","currentState","completedGoal","thoughts","handleSubmitUpdateCompleted","filter","newGoal","target","this","Component","CompletedGoals","completedGoals","removeCompletedItem","HeaderComplete","App","console","log","newCompleteList","unshift","ReactDOM","render","document","getElementById"],"mappings":"2PAaeA,MAXf,SAAgBC,GACd,OACE,gCACE,mDACA,iCACA,wBAAIC,UAAU,WAAd,WACA,mCCESC,MARf,SAAcF,GACZ,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAMG,Q,OCSFC,MAZf,SAAqBJ,GACnB,OACE,wBAAIC,UAAU,aAAaI,IAAI,cAC7B,uBAAGJ,UAAU,kBAAb,qBACA,uBAAGA,UAAU,UAAb,YACA,4BAAQA,UAAU,gBAAgBK,QAASN,EAAMO,eAAjD,gBCsBSC,MA3Bf,SAAoBR,GAClB,OACE,oCACGA,EAAMS,SACL,0BAAMR,UAAU,mBAAmBS,SAAUV,EAAMW,qBACjD,6CACA,2BACEC,KAAK,OACLC,MAAOb,EAAMc,aACbC,SAAUf,EAAMgB,sBAChBf,UAAU,cACVgB,YAAY,gBAEd,2BACEL,KAAK,OACLC,MAAOb,EAAMkB,mBACbH,SAAUf,EAAMmB,6BAChBlB,UAAU,oBACVgB,YAAY,iCAEd,2BAAOhB,UAAU,SAASW,KAAK,SAASC,MAAM,cCczCO,MAlCf,SAAmBpB,GACjB,OACE,oCACGA,EAAMqB,MAAMC,KAAI,SAACC,EAAOC,GACvB,OACE,wBACEnB,IAAG,eAAUmB,GACbvB,UAAWuB,EAAI,IAAM,EAAI,gBAAkB,iBAE3C,uBAAGvB,UAAU,QAAQsB,EAAME,MAC3B,uBAAGxB,UAAU,UAAUsB,EAAMG,QAC7B,4BACEpB,QAAS,WACPN,EAAM2B,WAAWH,IAEnBvB,UAAU,OAJZ,UAQA,4BACEA,UAAU,cACVK,QAAS,WACPN,EAAM4B,OAAOJ,KAHjB,qBCIGK,MAvBf,SAA0B7B,GACxB,OACE,oCACGA,EAAM8B,IACL,0BACE7B,UAAU,oBACVS,SAAUV,EAAM+B,yBAEhB,4CACA,2BACEnB,KAAK,OACLC,MAAOb,EAAMa,MACbE,SAAUf,EAAMgC,aAChB/B,UAAU,WACVgB,YAAY,mBAEd,2BAAOhB,UAAU,SAASW,KAAK,SAASC,MAAM,cCsGzCoB,E,2MAjHbC,MAAQ,CACNb,MAAO,CACL,CAAEI,KAAM,kBAAmBC,OAAQ,oBACnC,CACED,KAAM,yBACNC,OAAQ,gCAEV,CAAED,KAAM,oBAAqBC,OAAQ,iBAEvCS,MAAO,GACP1B,SAAS,EACTK,aAAc,GACdI,mBAAoB,GACpBL,MAAO,I,EA8BTkB,wBAA0B,SAAAK,GACxBA,EAAMC,iBACN,EAAKC,UAAS,SAAAC,GACZ,IAAMC,EAAa,eAAQD,EAAalB,MAAMkB,EAAaJ,QAO3D,OANAK,EAAcC,SAAWF,EAAa1B,MACtC,EAAKb,MAAM0C,4BAA4BF,GAKhC,CACLnB,MALoBkB,EAAalB,MAAMsB,QAAO,SAAClB,EAAMD,GACrD,OAAIA,IAAMe,EAAaJ,MAAcV,EACzB,QAIZZ,MAAO,GACPiB,IAAI,O,EAKVF,OAAS,SAAAJ,GACP,EAAKc,SAAS,CAAER,IAAK,EAAKI,MAAMJ,GAAIK,MAAOX,EAAGf,SAAS,K,EAGzDkB,WAAa,SAAAQ,GACX,EAAKG,UAAS,SAAAC,GAKZ,MAAO,CACLlB,MALoBkB,EAAalB,MAAMsB,QAAO,SAAClB,EAAMD,GACrD,OAAIA,IAAMW,EAAcV,EACZ,QAIZhB,SAAS,EACTqB,IAAI,O,EAKVnB,oBAAsB,SAAAyB,GACpBA,EAAMC,iBACN,EAAKC,UAAS,SAAAC,GACZ,IAAMK,EAAU,CACdnB,KAAMc,EAAazB,aACnBY,OAAQa,EAAarB,oBAGvB,MAAO,CACLG,MAFgB,sBAAOkB,EAAalB,OAApB,CAA2BuB,IAG3CnC,SAAS,EACTK,aAAc,GACdI,mBAAoB,Q,EAK1BF,sBAAwB,SAAAoB,GACtB,EAAKE,SAAS,CAAExB,aAAcsB,EAAMS,OAAOhC,S,EAG7CM,6BAA+B,SAAAiB,GAC7B,EAAKE,SAAS,CACZpB,mBAAoBkB,EAAMS,OAAOhC,S,EAGrCmB,aAAe,SAAAI,GACb,EAAKE,SAAS,CAAEzB,MAAOuB,EAAMS,OAAOhC,S,EAEtCN,cAAgB,WACd,EAAK+B,SAAS,CAAE7B,SAAU,EAAKyB,MAAMzB,QAASqB,IAAI,K,wEA7FlD,OACE,oCACE,wBAAI7B,UAAU,aACZ,kBAAC,EAAD,CAAaM,cAAeuC,KAAKvC,gBACjC,kBAAC,EAAD,CACEc,MAAOyB,KAAKZ,MAAMb,MAClBM,WAAYmB,KAAKnB,WACjBC,OAAQkB,KAAKlB,UAGjB,kBAAC,EAAD,CACEnB,QAASqC,KAAKZ,MAAMzB,QACpBK,aAAcgC,KAAKZ,MAAMpB,aACzBH,oBAAqBmC,KAAKnC,oBAC1BK,sBAAuB8B,KAAK9B,sBAC5BE,mBAAoB4B,KAAKZ,MAAMhB,mBAC/BC,6BAA8B2B,KAAK3B,+BAErC,kBAAC,EAAD,CACEW,GAAIgB,KAAKZ,MAAMJ,GACfC,wBAAyBe,KAAKf,wBAC9BlB,MAAOiC,KAAKZ,MAAMrB,MAClBmB,aAAcc,KAAKd,oB,GAvCTe,aCyBLC,MA7Bf,SAAwBhD,GACtB,OACE,oCACE,wBAAIC,UAAU,qBACZ,wBAAIA,UAAU,wBACZ,uBAAGA,UAAU,iBAAb,QACA,uBAAGA,UAAU,gBAAb,QACA,uBAAGA,UAAU,qBAAb,6BAEDD,EAAMiD,eAAe3B,KAAI,SAACC,EAAOC,GAChC,OACE,wBAAIvB,UAAU,oBAAoBI,IAAKkB,EAAME,MAC3C,uBAAGxB,UAAU,iBAAiBsB,EAAME,MACpC,uBAAGxB,UAAU,gBAAgBsB,EAAMG,QACnC,uBAAGzB,UAAU,qBAAqBsB,EAAMkB,UACxC,4BACEnC,QAAS,kBAAMN,EAAMkD,oBAAoB1B,IACzCvB,UAAU,eAEV,uBAAGA,UAAU,wBCXdkD,MARf,SAAwBnD,GACtB,OACE,6BACE,wBAAIC,UAAU,QAAQD,EAAMG,KAA5B,gBCmDSiD,E,2MAhDblB,MAAQ,CACN/B,KAAM,KACN8C,eAAgB,CACd,CAAExB,KAAM,YAAaC,OAAQ,WAAYe,SAAU,qBAErD5B,MAAO,GACPiB,IAAI,EACJK,MAAO,I,EAkBTe,oBAAsB,SAAAf,GACpB,EAAKG,UAAS,SAAAC,GAOZ,OANAc,QAAQC,IAAI,gBAML,CAAEL,eAJaV,EAAaU,eAAeN,QAAO,SAAClB,EAAMD,GAC9D,OAAIA,IAAMW,EAAcV,EACZ,a,EAMlBiB,4BAA8B,SAAAF,GAC5B,EAAKF,UAAS,SAAAC,GACZ,IAAMgB,EAAe,YAAOhB,EAAaU,gBAEzC,OADAM,EAAgBC,QAAQhB,GACjB,CACLS,eAAgBM,O,wEAjCZ,IACApD,EAAS2C,KAAKZ,MAAd/B,KACR,OACE,yBAAKF,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAME,KAAMA,IACZ,kBAAC,EAAD,CAAOuC,4BAA6BI,KAAKJ,8BACzC,kBAAC,EAAD,CAAgBvC,KAAMA,IACtB,kBAAC,EAAD,CACE8C,eAAgBH,KAAKZ,MAAMe,eAC3BC,oBAAqBJ,KAAKI,2B,GApBlBH,aCFlBU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0a29c2e5.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(props) {\n  return (\n    <header>\n      <h1>YEARLY GOAL SETTER </h1>\n      <h1>(</h1>\n      <h1 className=\"yrglset\">YRGLSET</h1>\n      <h1>)</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Year(props) {\n  return (\n    <div className=\"year\">\n      <h2>{props.year}</h2>\n    </div>\n  );\n}\n\nexport default Year;\n","import React from \"react\";\n\nfunction GoalsTitles(props) {\n  return (\n    <li className=\"goalsTitle\" key=\"goalsTitle\">\n      <p className=\"thingsIWannaDo\">Things I wanna do</p>\n      <p className=\"butWhy\">But Why?</p>\n      <button className=\"addGoalButton\" onClick={props.toggleNewGoal}>\n        add a goal\n      </button>\n    </li>\n  );\n}\n\nexport default GoalsTitles;\n","import React from \"react\";\n\nfunction AddGoalBox(props) {\n  return (\n    <>\n      {props.addGoal && (\n        <form className=\"newGoalContainer\" onSubmit={props.handleNewGoalSubmit}>\n          <label>new goal: </label>\n          <input\n            type=\"text\"\n            value={props.newGoalValue}\n            onChange={props.handleGoalValueChange}\n            className=\"newGoalText\"\n            placeholder=\"what is it?\"\n          ></input>\n          <input\n            type=\"text\"\n            value={props.newGoalReasonValue}\n            onChange={props.handleGoalReasonsValueChange}\n            className=\"newGoalReasonText\"\n            placeholder=\"any particular reason(s)?...\"\n          ></input>\n          <input className=\"submit\" type=\"submit\" value=\"Submit\"></input>\n        </form>\n      )}\n    </>\n  );\n}\n\nexport default AddGoalBox;\n","import React from \"react\";\n\nfunction GoalsList(props) {\n  return (\n    <>\n      {props.goals.map((entry, i) => {\n        return (\n          <li\n            key={`goal ${i}`}\n            className={i % 2 === 0 ? \"goalListItem2\" : \"goalListItem1\"}\n          >\n            <p className=\"goal\">{entry.goal}</p>\n            <p className=\"reason\">{entry.reason}</p>\n            <button\n              onClick={() => {\n                props.removeItem(i);\n              }}\n              className=\"btn\"\n            >\n              remove\n            </button>\n            <button\n              className=\"didItButton\"\n              onClick={() => {\n                props.toggle(i);\n              }}\n            >\n              I DID IT!!!\n            </button>\n          </li>\n        );\n      })}\n    </>\n  );\n}\n\nexport default GoalsList;\n","import React from \"react\";\n\nfunction CompletedTaskBox(props) {\n  return (\n    <>\n      {props.on && (\n        <form\n          className=\"thoughtsContainer\"\n          onSubmit={props.handleSubmitUpdateGoals}\n        >\n          <label>Thoughts?</label>\n          <input\n            type=\"text\"\n            value={props.value}\n            onChange={props.handleChange}\n            className=\"thoughts\"\n            placeholder=\"How did it go?\"\n          />\n          <input className=\"submit\" type=\"submit\" value=\"Submit\"></input>\n        </form>\n      )}\n    </>\n  );\n}\n\nexport default CompletedTaskBox;\n","import React, { Component } from \"react\";\nimport GoalsTitles from \"./GoalsTitles\";\nimport AddGoalBox from \"./AddGoalBox\";\nimport GoalsList from \"./GoalsList\";\nimport CompletedTaskBox from \"./CompletedTaskBox\";\n\nclass Goals extends Component {\n  state = {\n    goals: [\n      { goal: \"Visit Hullshshg\", reason: \"whales and stuff\" },\n      {\n        goal: \"learn to bake a cookie\",\n        reason: \"so i have a go-to baked good\"\n      },\n      { goal: \"write up big trip\", reason: \"to reconnect\" }\n    ],\n    index: \"\",\n    addGoal: false,\n    newGoalValue: \"\",\n    newGoalReasonValue: \"\",\n    value: \"\"\n  };\n  render() {\n    return (\n      <>\n        <ul className=\"goalsList\">\n          <GoalsTitles toggleNewGoal={this.toggleNewGoal} />\n          <GoalsList\n            goals={this.state.goals}\n            removeItem={this.removeItem}\n            toggle={this.toggle}\n          />\n        </ul>\n        <AddGoalBox\n          addGoal={this.state.addGoal}\n          newGoalValue={this.state.newGoalValue}\n          handleNewGoalSubmit={this.handleNewGoalSubmit}\n          handleGoalValueChange={this.handleGoalValueChange}\n          newGoalReasonValue={this.state.newGoalReasonValue}\n          handleGoalReasonsValueChange={this.handleGoalReasonsValueChange}\n        />\n        <CompletedTaskBox\n          on={this.state.on}\n          handleSubmitUpdateGoals={this.handleSubmitUpdateGoals}\n          value={this.state.value}\n          handleChange={this.handleChange}\n        />\n      </>\n    );\n  }\n  handleSubmitUpdateGoals = event => {\n    event.preventDefault();\n    this.setState(currentState => {\n      const completedGoal = { ...currentState.goals[currentState.index] };\n      completedGoal.thoughts = currentState.value;\n      this.props.handleSubmitUpdateCompleted(completedGoal);\n      const filteredGoals = currentState.goals.filter((goal, i) => {\n        if (i !== currentState.index) return goal;\n        else return null;\n      });\n      return {\n        goals: filteredGoals,\n        value: \"\",\n        on: false\n      };\n    });\n  };\n\n  toggle = i => {\n    this.setState({ on: !this.state.on, index: i, addGoal: false });\n  };\n\n  removeItem = index => {\n    this.setState(currentState => {\n      const filteredGoals = currentState.goals.filter((goal, i) => {\n        if (i !== index) return goal;\n        else return null;\n      });\n      return {\n        goals: filteredGoals,\n        addGoal: false,\n        on: false\n      };\n    });\n  };\n\n  handleNewGoalSubmit = event => {\n    event.preventDefault();\n    this.setState(currentState => {\n      const newGoal = {\n        goal: currentState.newGoalValue,\n        reason: currentState.newGoalReasonValue\n      };\n      const newGoalsList = [...currentState.goals, newGoal];\n      return {\n        goals: newGoalsList,\n        addGoal: false,\n        newGoalValue: \"\",\n        newGoalReasonValue: \"\"\n      };\n    });\n  };\n\n  handleGoalValueChange = event => {\n    this.setState({ newGoalValue: event.target.value });\n  };\n\n  handleGoalReasonsValueChange = event => {\n    this.setState({\n      newGoalReasonValue: event.target.value\n    });\n  };\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n  };\n  toggleNewGoal = () => {\n    this.setState({ addGoal: !this.state.addGoal, on: false });\n  };\n}\n\nexport default Goals;\n","import React from \"react\";\n\nfunction CompletedGoals(props) {\n  return (\n    <>\n      <ul className=\"completedGoalList\">\n        <li className=\"completedGoalsTitles\">\n          <p className=\"completedWhat\">What</p>\n          <p className=\"completedWhy\">Why </p>\n          <p className=\"completedThoughts\">Thoughts once you did it</p>\n        </li>\n        {props.completedGoals.map((entry, i) => {\n          return (\n            <li className=\"completedGoalItem\" key={entry.goal}>\n              <p className=\"completedWhat\">{entry.goal}</p>\n              <p className=\"completedWhy\">{entry.reason}</p>\n              <p className=\"completedThoughts\">{entry.thoughts}</p>\n              <button\n                onClick={() => props.removeCompletedItem(i)}\n                className=\"btnComplete\"\n              >\n                <i className=\"fa fa-close\"></i>\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nexport default CompletedGoals;\n","import React from \"react\";\n\nfunction HeaderComplete(props) {\n  return (\n    <div>\n      <h3 className=\"year\">{props.year}: complete</h3>\n    </div>\n  );\n}\n\nexport default HeaderComplete;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Year from \"./components/Year\";\nimport Goals from \"./components/Goals\";\nimport CompletedGoals from \"./components/CompletedGoals\";\nimport HeaderComplete from \"./components/HeaderComplete\";\n\nclass App extends Component {\n  state = {\n    year: 2020,\n    completedGoals: [\n      { goal: \"something\", reason: \"not sure\", thoughts: \"really regret it\" }\n    ],\n    value: \"\",\n    on: false,\n    index: \"\"\n  };\n  render() {\n    const { year } = this.state;\n    return (\n      <div className=\"page\">\n        <Header />\n        <Year year={year} />\n        <Goals handleSubmitUpdateCompleted={this.handleSubmitUpdateCompleted} />\n        <HeaderComplete year={year} />\n        <CompletedGoals\n          completedGoals={this.state.completedGoals}\n          removeCompletedItem={this.removeCompletedItem}\n        />\n      </div>\n    );\n  }\n\n  removeCompletedItem = index => {\n    this.setState(currentState => {\n      console.log(\"YOYO IN HERE\");\n\n      const filteredGoals = currentState.completedGoals.filter((goal, i) => {\n        if (i !== index) return goal;\n        else return null;\n      });\n      return { completedGoals: filteredGoals };\n    });\n  };\n\n  handleSubmitUpdateCompleted = completedGoal => {\n    this.setState(currentState => {\n      const newCompleteList = [...currentState.completedGoals];\n      newCompleteList.unshift(completedGoal);\n      return {\n        completedGoals: newCompleteList\n      };\n    });\n  };\n}\n\nexport default App;\n\n// FURTHER FUNCTIONALITY IF SERVER-BASED -> STORE PREVIOUS YEARS AND THEN NAVIGATE BETWEEN THEM WITH ARROW BUTTONS EITHER SIDE OF THE YEAR AT THE TOP\n// VIEW DELETED GOALS\n// CLICK ON TASK TO GO TO TASK PAGE WITH NOTES AND ANY OTHER INFO ABOUT IT\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}