{"version":3,"sources":["components/Header.jsx","components/Year.jsx","components/GoalsTitles.jsx","components/AddGoalBox.jsx","components/GoalsList.jsx","components/CompletedTaskBox.jsx","API/api.js","components/Goals.jsx","components/CompletedGoals.jsx","components/HeaderComplete.jsx","App.js","index.js"],"names":["Header","props","className","Year","year","GoalsTitles","key","onClick","toggleNewGoal","AddGoalBox","addGoal","onSubmit","handleNewGoalSubmit","type","value","newGoalValue","onChange","handleGoalValueChange","placeholder","newGoalReasonValue","handleGoalReasonsValueChange","GoalsList","apiGoals","map","entry","i","completed","deleted","goal","reason","removeItem","toggle","CompletedTaskBox","on","handleSubmitUpdateGoals","handleChange","addNewGoal","newGoal","console","log","axios","post","then","data","delete","goal_id","result","completeGoal","completedGoal","thoughts","patch","completedGoals","Goals","state","event","preventDefault","api","updateGoalsCompletedGoal","setState","updateGoalsDeletedGoal","addedGoal","updateGoalsNewGoal","target","this","Component","CompletedGoals","removeCompletedItem","HeaderComplete","App","index","goals","changeYear","increment","currentState","goalToDelete","filter","handleSubmitUpdateCompleted","Date","getFullYear","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2e43dae.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(props) {\n  return (\n    <header>\n      <h1>YEARLY GOAL SETTER </h1>\n      <h1>(</h1>\n      <h1 className=\"yrglset\">YRGLSET</h1>\n      <h1>)</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Year(props) {\n  return (\n    <div className=\"year\">\n      <h2>{props.year}</h2>\n    </div>\n  );\n}\n\nexport default Year;\n","import React from \"react\";\n\nfunction GoalsTitles(props) {\n  return (\n    <li className=\"goalsTitle\" key=\"goalsTitle\">\n      <p className=\"thingsIWannaDo\">Things I wanna do</p>\n      <p className=\"butWhy\">But Why?</p>\n      <button className=\"addGoalButton\" onClick={props.toggleNewGoal}>\n        add a goal\n      </button>\n    </li>\n  );\n}\n\nexport default GoalsTitles;\n","import React from \"react\";\n\nfunction AddGoalBox(props) {\n  return (\n    <>\n      {props.addGoal && (\n        <form className=\"newGoalContainer\" onSubmit={props.handleNewGoalSubmit}>\n          <label>new goal: </label>\n          <input\n            type=\"text\"\n            value={props.newGoalValue}\n            onChange={props.handleGoalValueChange}\n            className=\"newGoalText\"\n            placeholder=\"what is it?\"\n          ></input>\n          <input\n            type=\"text\"\n            value={props.newGoalReasonValue}\n            onChange={props.handleGoalReasonsValueChange}\n            className=\"newGoalReasonText\"\n            placeholder=\"any particular reason(s)?...\"\n          ></input>\n          <input className=\"submit\" type=\"submit\" value=\"Submit\"></input>\n        </form>\n      )}\n    </>\n  );\n}\n\nexport default AddGoalBox;\n","import React from \"react\";\n\nfunction GoalsList(props) {\n  return (\n    <>\n      {props.apiGoals.map((entry, i) => {\n        if (entry.completed === false && entry.deleted === false) {\n          return (\n            <li\n              key={`goal ${i}`}\n              className={i % 2 === 0 ? \"goalListItem2\" : \"goalListItem1\"}\n            >\n              <p className=\"goal\">{entry.goal}</p>\n              <p className=\"reason\">{entry.reason}</p>\n              <button\n                onClick={() => {\n                  props.removeItem(entry, i);\n                }}\n                className=\"btn\"\n              >\n                remove\n              </button>\n              <button\n                className=\"didItButton\"\n                onClick={() => {\n                  props.toggle(entry);\n                }}\n              >\n                I DID IT!!!\n              </button>\n            </li>\n          );\n        } else {\n          return null;\n        }\n      })}\n    </>\n  );\n}\n\nexport default GoalsList;\n","import React from \"react\";\n\nfunction CompletedTaskBox(props) {\n  return (\n    <>\n      {props.on && (\n        <form\n          className=\"thoughtsContainer\"\n          onSubmit={props.handleSubmitUpdateGoals}\n        >\n          <label>Thoughts?</label>\n          <input\n            type=\"text\"\n            value={props.value}\n            onChange={props.handleChange}\n            className=\"thoughts\"\n            placeholder=\"How did it go?\"\n          />\n          <input className=\"submit\" type=\"submit\" value=\"Submit\"></input>\n        </form>\n      )}\n    </>\n  );\n}\n\nexport default CompletedTaskBox;\n","// https://yrglset.herokuapp.com/api/goals/2020\n\nimport axios from \"axios\";\n\nexport const fetchGoalsByYear = year => {\n  console.log(\"in fetch\", year);\n\n  return axios\n    .get(\"https://yrglset.herokuapp.com/api/goals/\" + year)\n    .then(({ data: { goals } }) => {\n      return goals;\n    });\n};\n\nexport const addNewGoal = (newGoal, year) => {\n  console.log(\"in addNewGoal\", newGoal);\n  return axios\n    .post(`https://yrglset.herokuapp.com/api/goals/${year}`, newGoal)\n    .then(({ data: { newGoal } }) => {\n      return newGoal;\n    });\n};\n\nexport const removeItem = entry => {\n  console.log(\"in api rmeove\", entry);\n  return axios\n    .delete(`https://yrglset.herokuapp.com/api/goals/${entry.year}`, {\n      data: { goal_id: entry.goal_id }\n    })\n    .then(result => {\n      return result;\n    });\n};\nexport const completeGoal = (completedGoal, thoughts, year) => {\n  return axios\n    .patch(`https://yrglset.herokuapp.com/api/goals/${year}`, {\n      goal_id: completedGoal.goal_id,\n      thoughts: thoughts\n    })\n    .then(({ data: { completedGoals } }) => {\n      return completedGoals;\n    });\n};\n","import React, { Component } from \"react\";\nimport GoalsTitles from \"./GoalsTitles\";\nimport AddGoalBox from \"./AddGoalBox\";\nimport GoalsList from \"./GoalsList\";\nimport CompletedTaskBox from \"./CompletedTaskBox\";\nimport * as api from \"../API/api\";\n\nclass Goals extends Component {\n  state = {\n    completedGoal: \"\",\n    addGoal: false,\n    newGoalValue: \"\",\n    newGoalReasonValue: \"\",\n    value: \"\",\n    on: false\n  };\n  render() {\n    return (\n      <>\n        <ul className=\"goalsList\">\n          <GoalsTitles toggleNewGoal={this.toggleNewGoal} />\n          <GoalsList\n            apiGoals={this.props.apiGoals}\n            removeItem={this.removeItem}\n            toggle={this.toggle}\n          />\n        </ul>\n        <AddGoalBox\n          addGoal={this.state.addGoal}\n          newGoalValue={this.state.newGoalValue}\n          handleNewGoalSubmit={this.handleNewGoalSubmit}\n          handleGoalValueChange={this.handleGoalValueChange}\n          newGoalReasonValue={this.state.newGoalReasonValue}\n          handleGoalReasonsValueChange={this.handleGoalReasonsValueChange}\n        />\n        <CompletedTaskBox\n          completedGoal={this.state.completedGoal}\n          on={this.state.on}\n          handleSubmitUpdateGoals={this.handleSubmitUpdateGoals}\n          value={this.state.value}\n          handleChange={this.handleChange}\n        />\n      </>\n    );\n  }\n  handleSubmitUpdateGoals = event => {\n    event.preventDefault();\n    api\n      .completeGoal(this.state.completedGoal, this.state.value, this.props.year)\n      .then(([completedGoal]) =>\n        this.props.updateGoalsCompletedGoal(completedGoal)\n      )\n      .then(this.setState({ on: false, value: \"\" }));\n  };\n\n  toggle = entry => {\n    this.setState({\n      on: !this.state.on,\n      completedGoal: entry,\n      addGoal: false\n    });\n  };\n\n  removeItem = entry => {\n    api.removeItem(entry).then(this.props.updateGoalsDeletedGoal(entry));\n  };\n\n  handleNewGoalSubmit = event => {\n    const newGoal = {\n      year: this.props.year,\n      goal: this.state.newGoalValue,\n      reason: this.state.newGoalReasonValue\n    };\n    api\n      .addNewGoal(newGoal, this.props.year)\n      .then(([addedGoal]) => this.props.updateGoalsNewGoal(addedGoal))\n      .then(\n        this.setState({\n          addGoal: false,\n          newGoalValue: \"\",\n          newGoalReasonValue: \"\"\n        })\n      );\n    // .then(this.props.updateGoals(this.props.year));\n  };\n\n  handleGoalValueChange = event => {\n    this.setState({ newGoalValue: event.target.value });\n  };\n\n  handleGoalReasonsValueChange = event => {\n    this.setState({\n      newGoalReasonValue: event.target.value\n    });\n  };\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n  };\n  toggleNewGoal = () => {\n    this.setState({ addGoal: !this.state.addGoal, on: false });\n  };\n}\n\nexport default Goals;\n","import React from \"react\";\n\nfunction CompletedGoals(props) {\n  return (\n    <>\n      <ul className=\"completedGoalList\">\n        <li className=\"completedGoalsTitles\">\n          <p className=\"completedWhat\">What</p>\n          <p className=\"completedWhy\">Why </p>\n          <p className=\"completedThoughts\">Thoughts once you did it</p>\n        </li>\n        {props.apiGoals.map((entry, i) => {\n          if (entry.completed === true && entry.deleted === false) {\n            return (\n              <li className=\"completedGoalItem\" key={entry.goal}>\n                <p className=\"completedWhat\">{entry.goal}</p>\n                <p className=\"completedWhy\">{entry.reason}</p>\n                <p className=\"completedThoughts\">{entry.thoughts}</p>\n                <button\n                  onClick={() => props.removeCompletedItem(entry)}\n                  className=\"btnComplete\"\n                >\n                  <i className=\"fa fa-close\"></i>\n                </button>\n              </li>\n            );\n          } else {\n            return null;\n          }\n        })}\n      </ul>\n    </>\n  );\n}\n\nexport default CompletedGoals;\n","import React from \"react\";\n\nfunction HeaderComplete(props) {\n  return (\n    <div>\n      <h3 className=\"year\">{props.year}: complete</h3>\n    </div>\n  );\n}\n\nexport default HeaderComplete;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Year from \"./components/Year\";\nimport Goals from \"./components/Goals\";\nimport CompletedGoals from \"./components/CompletedGoals\";\nimport HeaderComplete from \"./components/HeaderComplete\";\nimport * as api from \"./API/api\";\n\nclass App extends Component {\n  state = {\n    year: \"\",\n    value: \"\",\n    on: false,\n    index: \"\",\n    goals: null\n  };\n  render() {\n    return this.state.goals === null ? (\n      <p>loading</p>\n    ) : (\n      <div className=\"page\">\n        <Header />\n        <Year year={this.state.year} />\n        <Goals\n          updateGoalsNewGoal={this.updateGoalsNewGoal}\n          updateGoalsDeletedGoal={this.updateGoalsDeletedGoal}\n          updateGoalsCompletedGoal={this.updateGoalsCompletedGoal}\n          year={this.state.year}\n          apiGoals={this.state.goals}\n          handleSubmitUpdateCompleted={this.handleSubmitUpdateCompleted}\n        />\n        <HeaderComplete year={this.state.year} />\n        <CompletedGoals\n          apiGoals={this.state.goals}\n          removeCompletedItem={this.removeCompletedItem}\n        />\n      </div>\n    );\n  }\n\n  removeCompletedItem = entry => {\n    api.removeItem(entry).then(this.updateGoalsDeletedGoal(entry));\n    //   this.setState(currentState => {\n    //     const filteredGoals = currentState.goals.filter(\n    //       goal => goal.goal_id !== entry.goal_id\n    //     );\n    //     return { goals: filteredGoals };\n    //   })\n    // );\n  };\n\n  componentDidMount() {\n    const date = new Date();\n    const year = date.getFullYear();\n    api.fetchGoalsByYear(year).then(goals => {\n      this.setState({ goals, year });\n    });\n  }\n\n  changeYear = increment => {\n    this.setState(currentState => {\n      const newYear = (currentState.year += increment);\n      return { year: newYear };\n    });\n  };\n\n  updateGoalsNewGoal = newGoal => {\n    this.setState(currentState => {\n      return { goals: [...currentState.goals, newGoal] };\n    });\n  };\n  updateGoalsDeletedGoal = goalToDelete => {\n    this.setState(currentState => {\n      const goalsNow = [...currentState.goals];\n      const filteredGoals = goalsNow.filter(\n        goal => goal.goal_id !== goalToDelete.goal_id\n      );\n      return { goals: filteredGoals };\n    });\n  };\n  updateGoalsCompletedGoal = completedGoal => {\n    console.log(completedGoal, \"UPDATE COMPLETD\");\n    this.setState(currentState => {\n      const updatedGoals = currentState.goals.map(goal => {\n        if (completedGoal.goal_id === goal.goal_id) {\n          return completedGoal;\n        } else {\n          return goal;\n        }\n      });\n      return { goals: updatedGoals, value: \"\", on: false };\n    });\n    // this.setState(currentState => {\n    //   };\n    // });\n  };\n}\n\nexport default App;\n\n// FURTHER FUNCTIONALITY IF SERVER-BASED -> STORE PREVIOUS YEARS AND THEN NAVIGATE BETWEEN THEM WITH ARROW BUTTONS EITHER SIDE OF THE YEAR AT THE TOP\n// VIEW DELETED GOALS\n// CLICK ON TASK TO GO TO TASK PAGE WITH NOTES AND ANY OTHER INFO ABOUT IT\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}